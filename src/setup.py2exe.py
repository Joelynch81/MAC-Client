"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""
import os
import site
from setuptools import setup, find_packages
from setuputils import which
import py2exe

from PySide import QtCore

from mapclient.settings.info import VERSION_STRING

# Version, this should match the value in mapclient.settings.info
version = VERSION_STRING
# Define the list of requirments
install_requires = ['rdflib',
                    'virtualenv',
                    'python-dateutil',
                    'pmr2.wfctrl',
                    'pmr2.client',
                    ]

additional_dlls = []
# Assuming that we are using the mkl libraries from intel
mkl_core = which('mkl_core.dll')
mkl_def = which('mkl_def.dll')
mkl_intel_thread = which('mkl_intel_thread.dll')
additional_dlls.extend([mkl_core, mkl_def, mkl_intel_thread])

# Assuming that we are using mpich2, what test can we perform to confirm this?
fmpich2 = which('fmpich2.dll')
# libiomp5md = which('libiomp5md.dll')
mpich2mpi = which('mpich2mpi')
mpich2nemesis = which('mpich2nemesis.dll')
additional_dlls.extend([fmpich2, mpich2mpi, mpich2nemesis])
# If visual Studio 2015 need UCRTBASE.dll, but not for windows 10?
ucrtbase = which('ucrtbase.dll')
msvcp140 = which('msvcp140.dll')
concrt140 = which('concrt140.dll')
additional_dlls.extend([ucrtbase, msvcp140, concrt140])

# QtXml4 is required for resource compilers
qtxml4 = which('QtXml4.dll')
additional_dlls.extend([qtxml4])

additional_dlls = [dll[0] for dll in additional_dlls if dll]

pyside_compilers = []
pyside_uic = which('pyside-uic.exe')
pyside_uic_script = which('pyside-uic-script.py')
qtcore_file = QtCore.__file__
print(qtcore_file)
qt_dir = os.path.dirname(qtcore_file)
pyside_rcc = [qt_dir + '/pyside-rcc.exe']

pyside_compilers.extend(pyside_uic)
pyside_compilers.extend(pyside_uic_script)
pyside_compilers.extend(pyside_rcc)
print(pyside_compilers)

APP = [{
    'script': 'mapclient/application.py',       ### Main Python script
    'icon_resources': [(0, '../res/win/MAP-Client.ico')], ### Icon to embed into the PE file.
    'dest_base' : 'MAP-Client',
    },
    {
        'script': '../res/win/portable_virtualenv.py',
        'dest_base': 'virtualenv',
    },
]

site_packages_dir = site.getsitepackages()[1]
DATA_FILES = [('.', additional_dlls), ('.', pyside_compilers)]
print(DATA_FILES)
PACKAGES = find_packages(exclude=['tests', 'tests.*', ])
PACKAGES.extend(['numpy', 'scipy', 'gias2', 'pkg_resources', 'opencmiss', 'rdflib'])
EXCLUDES = ['numpy.distutils.tests',]
INCLUDES = ['virtualenv']
OPTIONS = {'py2exe': {
        'packages': PACKAGES,
        'excludes': EXCLUDES,
        'includes': INCLUDES,
        # 'skip_archive': True,
        'compressed': False,
    }
}


setup(
    console=APP,
    options=OPTIONS,
    data_files=DATA_FILES,
    install_requires=install_requires,
)

