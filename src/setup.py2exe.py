"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""
import site
from setuptools import setup, find_packages
from distutils.spawn import find_executable
import py2exe

from mapclient.settings.info import VERSION_STRING

# Version, this should match the value in mapclient.settings.info
version = VERSION_STRING
# Define the list of requirments
install_requires = ['rdflib',
                    'virtualenv',
                    'python-dateutil',
                    'pmr2.wfctrl',
                    'pmr2.client',
                    ]

additional_dlls = []
# Assuming that we are using the mkl libraries from intel
mkl_core = find_executable('mkl_core.dll')
mkl_def = find_executable('mkl_def.dll')
mkl_intel_thread = find_executable('mkl_intel_thread.dll')
additional_dlls.extend([mkl_core, mkl_def, mkl_intel_thread])

# Assuming that we are using mpich2, what test can we perform to confirm this?
fmpich2 = find_executable('fmpich2.dll')
libiomp5md = find_executable('libiomp5md.dll')
mpich2mpi = find_executable('mpich2mpi.dll')
mpich2nemesis = find_executable('mpich2nemesis.dll')
additional_dlls.extend([fmpich2, libiomp5md, mpich2mpi, mpich2nemesis])

# If visual Studio 2015 need UCRTBASE.dll, but not for windows 10?
ucrtbase = find_executable('ucrtbase.dll')
msvcp140 = find_executable('msvcp140.dll')
concrt140 = find_executable('concrt140.dll')
additional_dlls.extend([ucrtbase, msvcp140, concrt140])

additional_dlls = [dll[0] for dll in additional_dlls if dll]

APP = [{
    'script': 'mapclient/application.py',       ### Main Python script
    'icon_resources': [(0, '../res/win/MAPClient.ico')], ### Icon to embed into the PE file.
    'dest_base' : 'MAP-Client'
}]

site_packages_dir = site.getsitepackages()[1]
DATA_FILES = []
PACKAGES = find_packages(exclude=['tests', 'tests.*', ])
PACKAGES.extend(['numpy', 'scipy', 'gias2', 'pkg_resources', 'opencmiss'])
EXCLUDES = ['numpy.distutils.tests',]
OPTIONS = {'py2exe': {
        'packages': PACKAGES,
        'excludes': EXCLUDES,
        "skip_archive": True,
#        "compressed": False,
    }
}

setup(
    windows=APP,
    options=OPTIONS,
    data_files=DATA_FILES,
    install_requires=install_requires,
)

